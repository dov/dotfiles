import os
import sys
import xlrd
from importer import get_chamber_for
from django.core.management import setup_environ


sheets_to_panels = {
        'Civ Lit' : 'Civil Litigation and Prosecutions',
        'Comm Conv': 'Commercial Conveyancing',
        'Corporate': 'Corporate Governance and Ethical Standards',
        'Education': 'Education',
        'Employment': 'Employment Law',
        'General': 'General Legal Advice',
        'Gen Conv': 'General Conveyancing',
        'Major IT': 'Major IT and Commercial Contracts',
        'PFI etc': 'PFI, PPP, Company, Trust and Legal Relationships',
        'Planning': 'Planning and Environmental Law',
        'Police': 'Police Authority Work',
        'Social': 'Social Services',
}


def main():
    scores_file = os.path.join(
            os.path.dirname(os.path.abspath(__file__)),
            'source_data','swwc','Marking - Solicitors.xls'
    )
    if not os.path.exists(scores_file):
        print 'no scores file'
        sys.exit()

    wb = xlrd.open_workbook(scores_file)
    for sheetname, panelname in sheets_to_panels.iteritems():
        sheet = wb.sheet_by_name(sheetname)
        panel = Panel.objects.get(name=panelname, professional_type__id=2)
        print panel
        if not sheet.name in ['Police', 'Social']:
            for row in range(2,23):
                try:
                    chambername = sheet.cell(row, 0).value
                except IndexError:
                    if row > 10:
                        break
                    else:
                        raise
                if chambername:
                    chamber = get_chamber_for(chambername)
                    print chamber
                    ms = MethodStatement.objects.get(
                            fee_calculation__chamber=chamber,
                            template__framework_panel=panel
                    )
                    ms.score = sheet.cell(row,5).value
                    print 'score', ms.score
                    ms.save()




if __name__=='__main__':
    sys.path.append(os.path.split(os.path.dirname(__file__))[0])
    import settings_swwc
    setup_environ(settings_swwc)
    from pricing.models import Chamber, MethodStatement, Panel
    main()
    sys.exit()
